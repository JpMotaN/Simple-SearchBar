name: Release

on:
  push:
    tags:
      - 'v*.*.*'   # ex.: v0.1.2

permissions:
  contents: write  # para commit de volta e criação do release

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version from tag
        id: vars
        run: |
          RAW_REF="${GITHUB_REF#refs/tags/}"
          VERSION="${RAW_REF#v}"     # remove o "v" da tag
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$RAW_REF" >> $GITHUB_OUTPUT

      - name: Update module.json (version + download)
        run: |
          REPO="${{ github.repository }}"
          VERSION="${{ steps.vars.outputs.version }}"
          DOWNLOAD_URL="https://github.com/${REPO}/releases/download/v${VERSION}/simple-searchbar.zip"

          # Atualiza version e download com jq
          jq --arg v "$VERSION" --arg dl "$DOWNLOAD_URL" \
             '.version=$v | .download=$dl' module.json > module.tmp.json
          mv module.tmp.json module.json

          echo "module.json updated:"
          cat module.json

      - name: Build zip
        run: |
          mkdir -p dist
          zip -r dist/simple-searchbar.zip \
            module.json \
            lang \
            scripts \
            styles \
            templates \
            --exclude '*.git*' \
            --exclude 'dist/*' \
            --exclude '.github/*'

      - name: Commit updated module.json back to main
        run: |
          VERSION="${{ steps.vars.outputs.version }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add module.json
          git commit -m "chore: bump module.json to v${VERSION}" || echo "No changes"
          git push || echo "No push (fork/no perms)"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: Simple SearchBar v${{ steps.vars.outputs.version }}
          body: |
            Release v${{ steps.vars.outputs.version }}

            - Auto-generated zip for Foundry VTT
            - module.json updated with version and download URL
          draft: false
          prerelease: false
          files: |
            dist/simple-searchbar.zip
            module.json

      # --- Publica a versão no Foundry Package Repository (EXATAMENTE como no projeto anterior) ---
      - name: Publish to Foundry Package Repository
        uses: cs96and/FoundryVTT-release-package@v1
        with:
          package-token: ${{ secrets.PACKAGE_TOKEN }}
          # o Foundry requer o manifest da VERSÃO específica (o module.json anexado ao release)
          manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ steps.vars.outputs.tag }}/module.json
